@use "sass:math";
@use "variables" as v;

// creating a utilities map of maps
$utilities: (
  "padding": (
    "prefix": "p",
    "values": (
      "0": 0,
      "1": v.$base-padding,
      "2": v.$base-padding * 2,
      "3": v.$base-padding * 4,
      "4": v.$base-padding * 6,
      "5": v.$base-padding * 8,
    ),
  ),
  "padding-left": (
    "prefix": "pl",
    "values": (
      "0": 0,
      "1": v.$base-padding,
      "2": v.$base-padding * 2,
      "3": v.$base-padding * 4,
      "4": v.$base-padding * 6,
      "5": v.$base-padding * 8,
    ),
  ),
  "padding-right": (
    "prefix": "pr",
    "values": (
      "0": 0,
      "1": v.$base-padding,
      "2": v.$base-padding * 2,
      "3": v.$base-padding * 4,
      "4": v.$base-padding * 6,
      "5": v.$base-padding * 8,
    ),
  ),
  "padding-top": (
    "prefix": "pt",
    "values": (
      "0": 0,
      "1": v.$base-padding,
      "2": v.$base-padding * 2,
      "3": v.$base-padding * 4,
      "4": v.$base-padding * 6,
      "5": v.$base-padding * 8,
    ),
  ),
  "padding-bottom": (
    "prefix": "pb",
    "values": (
      "0": 0,
      "1": v.$base-padding,
      "2": v.$base-padding * 2,
      "3": v.$base-padding * 4,
      "4": v.$base-padding * 6,
      "5": v.$base-padding * 8,
    ),
  ),
  "margin": (
    "prefix": "m",
    "values": (
      "0": 0,
      "1": v.$base-margin,
      "2": v.$base-margin * 2,
      "3": v.$base-margin * 4,
      "4": v.$base-margin * 6,
      "5": v.$base-margin * 8,
      "auto": auto,
    ),
  ),
  "margin-left": (
    "prefix": "ml",
    "values": (
      "0": 0,
      "1": v.$base-margin,
      "2": v.$base-margin * 2,
      "3": v.$base-margin * 4,
      "4": v.$base-margin * 6,
      "5": v.$base-margin * 8,
      "auto": auto,
    ),
  ),
  "margin-right": (
    "prefix": "mr",
    "values": (
      "0": 0,
      "1": v.$base-margin,
      "2": v.$base-margin * 2,
      "3": v.$base-margin * 4,
      "4": v.$base-margin * 6,
      "5": v.$base-margin * 8,
      "auto": auto,
    ),
  ),
  "margin-top": (
    "prefix": "mt",
    "values": (
      "0": 0,
      "1": v.$base-margin,
      "2": v.$base-margin * 2,
      "3": v.$base-margin * 4,
      "4": v.$base-margin * 6,
      "5": v.$base-margin * 8,
      "auto": auto,
    ),
  ),
  "margin-bottom": (
    "prefix": "mb",
    "values": (
      "0": 0,
      "1": v.$base-margin,
      "2": v.$base-margin * 2,
      "3": v.$base-margin * 4,
      "4": v.$base-margin * 6,
      "5": v.$base-margin * 8,
      "auto": auto,
    ),
  ),
  "opacity": (
    "prefix": "o",
    "values": (
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1,
    ),
  ),
  "border-radius": (
    "prefix": "br",
    "values": (
      "default": v.$base-border-radius,
      "none": 0,
      "xs": math.div(v.$base-border-radius, 4),
      "sm": math.div(v.$base-border-radius, 2),
      "lg": v.$base-border-radius * 2,
      "full": 50%,
    ),
  ),
  "box-sizing": (
    "prefix": "box",
    "values": (
      "border": border-box,
      "content": content-box,
      "initial": initial,
      "inherit": inherit,
    ),
  ),
  "display": (
    "prefix": "display",
    "values": (
      "n": none,
      "b": block,
      "i": inline,
      "f": flex,
      "i-f": inline-block,
    ),
  ),
  "font-size": (
    "prefix": "font",
    "values": (
      "sm": v.$font-size-sm,
      "md": v.$font-size-md,
      "lg": v.$font-size-lg,
      "xl": v.$font-size-xl,
      "xxl": v.$font-size-xxl,
    ),
  ),
  "text-align": (
    "prefix": "text",
    "values": (
      "left": left,
      "center": center,
      "right": right,
      "justify": justify,
      "initial": initial,
      "inherit": inherit,
    ),
  ),
  "align-items": (
    "prefix": "align",
    "values": (
      "normal": normal,
      "stretch": stretch,
      "center": center,
      "start": start,
      "end": end,
      "flex-start": flex-start,
      "flex-end": flex-end,
      "baseline": baseline,
      "inherit": inherit,
      "initial": initial,
      "revert": revert,
      "unset": unset,
    ),
  ),
  "justify-content": (
    "prefix": "justify",
    "values": (
      "normal": normal,
      "stretch": stretch,
      "center": center,
      "start": start,
      "end": end,
      "flex-start": flex-start,
      "flex-end": flex-end,
      "left": left,
      "right": right,
      "space-between": space-between,
      "space-around": space-around,
      "space-evenly": space-evenly,
      "baseline": baseline,
      "inherit": inherit,
      "initial": initial,
      "revert": revert,
      "unset": unset,
    ),
  ),
  "height": (
    "prefix": "h",
    "values": (
      "50": v.$base-height * 5,
      "100": v.$base-height * 10,
      "200": v.$base-height * 20,
      "300": v.$base-height * 30,
      "400": v.$base-height * 40,
      "500": v.$base-height * 50,
      "600": v.$base-height * 60,
      "700": v.$base-height * 70,
      "800": v.$base-height * 80,
      "900": v.$base-height * 90,
      "1000": v.$base-height * 100,
    ),
  ),
  "width": (
    "prefix": "w",
    "values": (
      "50": v.$base-width * 5,
      "100": v.$base-width * 10,
      "200": v.$base-width * 20,
      "300": v.$base-width * 30,
      "400": v.$base-width * 40,
      "500": v.$base-width * 50,
      "600": v.$base-width * 60,
      "700": v.$base-width * 70,
      "800": v.$base-width * 80,
      "900": v.$base-width * 90,
      "1000": v.$base-width * 100,
    ),
  ),
);

// generate utility classes
@each $property, $map in $utilities {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $key, $val in $values {
    @if ($key == "default") {
      .#{$prefix} {
        #{$property}: $val;
      }
    } @else {
      .#{$prefix}-#{$key} {
        #{$property}: $val;
      }
    }
  }
}
